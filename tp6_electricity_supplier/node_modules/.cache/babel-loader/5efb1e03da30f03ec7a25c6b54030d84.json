{"remainingRequest":"D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\node_modules\\babel-loader\\lib\\index.js!D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\src\\lib\\http.js","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\src\\lib\\http.js","mtime":1576807752000},{"path":"D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/*\najax请求函数模块\n返回值: promise对象(返回: response.data)\n */\nimport axios from 'axios';\nexport function get(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ajax(url, data, 'GET');\n}\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ajax(url, data, 'POST');\n}\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ajax(url, data, 'PUT');\n}\nexport function ajax(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  return new Promise(function (resolve, reject) {\n    // 执行异步ajax请求\n    var promise;\n\n    if (type === 'GET') {\n      // 准备url query参数数据\n      var dataStr = ''; //数据拼接字符串\n\n      Object.keys(data).forEach(function (key) {\n        dataStr += key + '=' + data[key] + '&';\n      });\n\n      if (dataStr !== '') {\n        dataStr = dataStr.substring(0, dataStr.lastIndexOf('&'));\n        url = url + '?' + dataStr;\n      } // 发送get请求\n\n\n      promise = axios.get(url);\n    } else if (type === 'POST') {\n      // 发送post请求\n      promise = axios.post(url, data);\n    } else {\n      promise = axios.put(url, data);\n    }\n\n    promise.then(function (response) {\n      // 成功了调用resolve()\n      if (response) {\n        resolve(response.data);\n      } else {// alert(\"当前请求的返回值出现错误,请检查！\", \"error\")\n      }\n    }).catch(function (error) {\n      //失败了调用reject()\n      reject(error);\n    });\n  });\n}",{"version":3,"sources":["D:\\phpstudy_pro\\WWW\\gitShopTP\\tp6_electricity_supplier\\src\\lib\\http.js"],"names":["axios","get","url","data","ajax","post","put","type","Promise","resolve","reject","promise","dataStr","Object","keys","forEach","key","substring","lastIndexOf","then","response","catch","error"],"mappings":";;;AAAA;;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,GAAT,CAAaC,GAAb,EAA6B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAChC,SAAOC,IAAI,CAACF,GAAD,EAAMC,IAAN,EAAY,KAAZ,CAAX;AACH;AAED,OAAO,SAASE,IAAT,CAAcH,GAAd,EAA8B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AACjC,SAAOC,IAAI,CAACF,GAAD,EAAMC,IAAN,EAAY,MAAZ,CAAX;AACH;AAED,OAAO,SAASG,GAAT,CAAaJ,GAAb,EAA6B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAChC,SAAOC,IAAI,CAACF,GAAD,EAAMC,IAAN,EAAY,KAAZ,CAAX;AACH;AAED,OAAO,SAASC,IAAT,CAAcF,GAAd,EAA4C;AAAA,MAAzBC,IAAyB,uEAAlB,EAAkB;AAAA,MAAdI,IAAc,uEAAP,KAAO;AAC/C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIC,OAAJ;;AACA,QAAIJ,IAAI,KAAK,KAAb,EAAoB;AAChB;AACA,UAAIK,OAAO,GAAG,EAAd,CAFgB,CAEE;;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,OAAlB,CAA0B,UAAAC,GAAG,EAAI;AAC7BJ,QAAAA,OAAO,IAAII,GAAG,GAAG,GAAN,GAAYb,IAAI,CAACa,GAAD,CAAhB,GAAwB,GAAnC;AACH,OAFD;;AAGA,UAAIJ,OAAO,KAAK,EAAhB,EAAoB;AAChBA,QAAAA,OAAO,GAAGA,OAAO,CAACK,SAAR,CAAkB,CAAlB,EAAqBL,OAAO,CAACM,WAAR,CAAoB,GAApB,CAArB,CAAV;AACAhB,QAAAA,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYU,OAAlB;AACH,OATe,CAUhB;;;AACAD,MAAAA,OAAO,GAAGX,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAV;AACH,KAZD,MAYO,IAAIK,IAAI,KAAK,MAAb,EAAqB;AACxB;AACAI,MAAAA,OAAO,GAAGX,KAAK,CAACK,IAAN,CAAWH,GAAX,EAAgBC,IAAhB,CAAV;AACH,KAHM,MAGA;AACHQ,MAAAA,OAAO,GAAGX,KAAK,CAACM,GAAN,CAAUJ,GAAV,EAAeC,IAAf,CAAV;AACH;;AACDQ,IAAAA,OAAO,CAACQ,IAAR,CAAa,UAAUC,QAAV,EAAoB;AAC7B;AACA,UAAIA,QAAJ,EAAc;AACVX,QAAAA,OAAO,CAACW,QAAQ,CAACjB,IAAV,CAAP;AACH,OAFD,MAEO,CACH;AACH;AACJ,KAPD,EAOGkB,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAZ,MAAAA,MAAM,CAACY,KAAD,CAAN;AACH,KAVD;AAWH,GAhCM,CAAP;AAiCH","sourcesContent":["/*\najax请求函数模块\n返回值: promise对象(返回: response.data)\n */\nimport axios from 'axios'\n\nexport function get(url, data = {}) {\n    return ajax(url, data, 'GET');\n}\n\nexport function post(url, data = {}) {\n    return ajax(url, data, 'POST');\n}\n\nexport function put(url, data = {}) {\n    return ajax(url, data, 'PUT');\n}\n\nexport function ajax(url, data = {}, type = 'GET') {\n    return new Promise((resolve, reject) => {\n        // 执行异步ajax请求\n        let promise;\n        if (type === 'GET') {\n            // 准备url query参数数据\n            let dataStr = ''; //数据拼接字符串\n            Object.keys(data).forEach(key => {\n                dataStr += key + '=' + data[key] + '&'\n            });\n            if (dataStr !== '') {\n                dataStr = dataStr.substring(0, dataStr.lastIndexOf('&'));\n                url = url + '?' + dataStr\n            }\n            // 发送get请求\n            promise = axios.get(url)\n        } else if (type === 'POST') {\n            // 发送post请求\n            promise = axios.post(url, data)\n        } else {\n            promise = axios.put(url, data)\n        }\n        promise.then(function (response) {\n            // 成功了调用resolve()\n            if (response) {\n                resolve(response.data)\n            } else {\n                // alert(\"当前请求的返回值出现错误,请检查！\", \"error\")\n            }\n        }).catch(function (error) {\n            //失败了调用reject()\n            reject(error)\n        })\n    })\n}\n"]}]}